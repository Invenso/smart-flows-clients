/*
 * Xpertdoc SmartFlows
 * This describes the REST api for one Xpertdoc SmartFlows project
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package xpertdoc.smartflows.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * EntityReference
 */
@javax.annotation.Generated(value = "xpertdoc.smartflows.codegen.languages.JavaClientCodegen", date = "2018-05-22T10:07:28.195+02:00")
public class EntityReference {
  @SerializedName("name")
  private String name = null;

  @SerializedName("displayName")
  private String displayName = null;

  @SerializedName("fields")
  private List<EntityReferenceFields> fields = null;

  @SerializedName("lookups")
  private List<EntityReferenceLookups> lookups = null;

  @SerializedName("relationships")
  private List<EntityReferenceRelationships> relationships = null;

  public EntityReference name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public EntityReference displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @ApiModelProperty(value = "")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public EntityReference fields(List<EntityReferenceFields> fields) {
    this.fields = fields;
    return this;
  }

  public EntityReference addFieldsItem(EntityReferenceFields fieldsItem) {
    if (this.fields == null) {
      this.fields = new ArrayList<EntityReferenceFields>();
    }
    this.fields.add(fieldsItem);
    return this;
  }

   /**
   * Get fields
   * @return fields
  **/
  @ApiModelProperty(value = "")
  public List<EntityReferenceFields> getFields() {
    return fields;
  }

  public void setFields(List<EntityReferenceFields> fields) {
    this.fields = fields;
  }

  public EntityReference lookups(List<EntityReferenceLookups> lookups) {
    this.lookups = lookups;
    return this;
  }

  public EntityReference addLookupsItem(EntityReferenceLookups lookupsItem) {
    if (this.lookups == null) {
      this.lookups = new ArrayList<EntityReferenceLookups>();
    }
    this.lookups.add(lookupsItem);
    return this;
  }

   /**
   * Get lookups
   * @return lookups
  **/
  @ApiModelProperty(value = "")
  public List<EntityReferenceLookups> getLookups() {
    return lookups;
  }

  public void setLookups(List<EntityReferenceLookups> lookups) {
    this.lookups = lookups;
  }

  public EntityReference relationships(List<EntityReferenceRelationships> relationships) {
    this.relationships = relationships;
    return this;
  }

  public EntityReference addRelationshipsItem(EntityReferenceRelationships relationshipsItem) {
    if (this.relationships == null) {
      this.relationships = new ArrayList<EntityReferenceRelationships>();
    }
    this.relationships.add(relationshipsItem);
    return this;
  }

   /**
   * Get relationships
   * @return relationships
  **/
  @ApiModelProperty(value = "")
  public List<EntityReferenceRelationships> getRelationships() {
    return relationships;
  }

  public void setRelationships(List<EntityReferenceRelationships> relationships) {
    this.relationships = relationships;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EntityReference entityReference = (EntityReference) o;
    return Objects.equals(this.name, entityReference.name) &&
        Objects.equals(this.displayName, entityReference.displayName) &&
        Objects.equals(this.fields, entityReference.fields) &&
        Objects.equals(this.lookups, entityReference.lookups) &&
        Objects.equals(this.relationships, entityReference.relationships);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, displayName, fields, lookups, relationships);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EntityReference {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    lookups: ").append(toIndentedString(lookups)).append("\n");
    sb.append("    relationships: ").append(toIndentedString(relationships)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

