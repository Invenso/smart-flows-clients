/*
 * Xpertdoc SmartFlows
 * This describes the REST api for one Xpertdoc SmartFlows project
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package xpertdoc.smartflows.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * ConditionOccurrence
 */
@javax.annotation.Generated(value = "xpertdoc.smartflows.codegen.languages.JavaClientCodegen", date = "2018-05-22T10:07:28.195+02:00")
public class ConditionOccurrence {
  @SerializedName("emptyElementsAreNoneExistant")
  private Boolean emptyElementsAreNoneExistant = false;

  @SerializedName("value")
  private ConditionValue value = null;

  @SerializedName("occurrenceCount")
  private NumberCondition occurrenceCount = null;

  public ConditionOccurrence emptyElementsAreNoneExistant(Boolean emptyElementsAreNoneExistant) {
    this.emptyElementsAreNoneExistant = emptyElementsAreNoneExistant;
    return this;
  }

   /**
   * Get emptyElementsAreNoneExistant
   * @return emptyElementsAreNoneExistant
  **/
  @ApiModelProperty(value = "")
  public Boolean isEmptyElementsAreNoneExistant() {
    return emptyElementsAreNoneExistant;
  }

  public void setEmptyElementsAreNoneExistant(Boolean emptyElementsAreNoneExistant) {
    this.emptyElementsAreNoneExistant = emptyElementsAreNoneExistant;
  }

  public ConditionOccurrence value(ConditionValue value) {
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @ApiModelProperty(value = "")
  public ConditionValue getValue() {
    return value;
  }

  public void setValue(ConditionValue value) {
    this.value = value;
  }

  public ConditionOccurrence occurrenceCount(NumberCondition occurrenceCount) {
    this.occurrenceCount = occurrenceCount;
    return this;
  }

   /**
   * Get occurrenceCount
   * @return occurrenceCount
  **/
  @ApiModelProperty(value = "")
  public NumberCondition getOccurrenceCount() {
    return occurrenceCount;
  }

  public void setOccurrenceCount(NumberCondition occurrenceCount) {
    this.occurrenceCount = occurrenceCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConditionOccurrence conditionOccurrence = (ConditionOccurrence) o;
    return Objects.equals(this.emptyElementsAreNoneExistant, conditionOccurrence.emptyElementsAreNoneExistant) &&
        Objects.equals(this.value, conditionOccurrence.value) &&
        Objects.equals(this.occurrenceCount, conditionOccurrence.occurrenceCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(emptyElementsAreNoneExistant, value, occurrenceCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConditionOccurrence {\n");
    
    sb.append("    emptyElementsAreNoneExistant: ").append(toIndentedString(emptyElementsAreNoneExistant)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    occurrenceCount: ").append(toIndentedString(occurrenceCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

