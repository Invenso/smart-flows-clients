/*
 * Xpertdoc SmartFlows
 * This describes the REST api for one Xpertdoc SmartFlows project
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package xpertdoc.smartflows.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Settings
 */
@javax.annotation.Generated(value = "xpertdoc.smartflows.codegen.languages.JavaClientCodegen", date = "2018-05-22T10:07:28.195+02:00")
public class Settings {
  @SerializedName("project")
  private ProjectSettings project = null;

  @SerializedName("defaultPlugin")
  private DefaultPluginSettings defaultPlugin = null;

  @SerializedName("cleanup")
  private CleanupSettings cleanup = null;

  @SerializedName("userManagement")
  private UserManagementSettings userManagement = null;

  @SerializedName("frontend")
  private Object frontend = null;

  public Settings project(ProjectSettings project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @ApiModelProperty(value = "")
  public ProjectSettings getProject() {
    return project;
  }

  public void setProject(ProjectSettings project) {
    this.project = project;
  }

  public Settings defaultPlugin(DefaultPluginSettings defaultPlugin) {
    this.defaultPlugin = defaultPlugin;
    return this;
  }

   /**
   * Get defaultPlugin
   * @return defaultPlugin
  **/
  @ApiModelProperty(value = "")
  public DefaultPluginSettings getDefaultPlugin() {
    return defaultPlugin;
  }

  public void setDefaultPlugin(DefaultPluginSettings defaultPlugin) {
    this.defaultPlugin = defaultPlugin;
  }

  public Settings cleanup(CleanupSettings cleanup) {
    this.cleanup = cleanup;
    return this;
  }

   /**
   * Get cleanup
   * @return cleanup
  **/
  @ApiModelProperty(value = "")
  public CleanupSettings getCleanup() {
    return cleanup;
  }

  public void setCleanup(CleanupSettings cleanup) {
    this.cleanup = cleanup;
  }

  public Settings userManagement(UserManagementSettings userManagement) {
    this.userManagement = userManagement;
    return this;
  }

   /**
   * Get userManagement
   * @return userManagement
  **/
  @ApiModelProperty(value = "")
  public UserManagementSettings getUserManagement() {
    return userManagement;
  }

  public void setUserManagement(UserManagementSettings userManagement) {
    this.userManagement = userManagement;
  }

  public Settings frontend(Object frontend) {
    this.frontend = frontend;
    return this;
  }

   /**
   * Get frontend
   * @return frontend
  **/
  @ApiModelProperty(value = "")
  public Object getFrontend() {
    return frontend;
  }

  public void setFrontend(Object frontend) {
    this.frontend = frontend;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Settings settings = (Settings) o;
    return Objects.equals(this.project, settings.project) &&
        Objects.equals(this.defaultPlugin, settings.defaultPlugin) &&
        Objects.equals(this.cleanup, settings.cleanup) &&
        Objects.equals(this.userManagement, settings.userManagement) &&
        Objects.equals(this.frontend, settings.frontend);
  }

  @Override
  public int hashCode() {
    return Objects.hash(project, defaultPlugin, cleanup, userManagement, frontend);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Settings {\n");
    
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    defaultPlugin: ").append(toIndentedString(defaultPlugin)).append("\n");
    sb.append("    cleanup: ").append(toIndentedString(cleanup)).append("\n");
    sb.append("    userManagement: ").append(toIndentedString(userManagement)).append("\n");
    sb.append("    frontend: ").append(toIndentedString(frontend)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

