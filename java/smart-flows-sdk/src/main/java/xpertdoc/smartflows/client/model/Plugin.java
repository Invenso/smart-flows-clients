/*
 * Xpertdoc SmartFlows
 * This describes the REST api for one Xpertdoc SmartFlows project
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package xpertdoc.smartflows.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Plugin
 */
@javax.annotation.Generated(value = "xpertdoc.smartflows.codegen.languages.JavaClientCodegen", date = "2018-05-22T10:07:28.195+02:00")
public class Plugin {
  @SerializedName("id")
  private String id = null;

  @SerializedName("displayName")
  private String displayName = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("connectorType")
  private IdWithName connectorType = null;

  @SerializedName("inputDataset")
  private IdWithName inputDataset = null;

  @SerializedName("flowSteps")
  private List<IdWithName> flowSteps = null;

  public Plugin id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Plugin displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @ApiModelProperty(required = true, value = "")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public Plugin description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Plugin connectorType(IdWithName connectorType) {
    this.connectorType = connectorType;
    return this;
  }

   /**
   * Get connectorType
   * @return connectorType
  **/
  @ApiModelProperty(value = "")
  public IdWithName getConnectorType() {
    return connectorType;
  }

  public void setConnectorType(IdWithName connectorType) {
    this.connectorType = connectorType;
  }

  public Plugin inputDataset(IdWithName inputDataset) {
    this.inputDataset = inputDataset;
    return this;
  }

   /**
   * Get inputDataset
   * @return inputDataset
  **/
  @ApiModelProperty(value = "")
  public IdWithName getInputDataset() {
    return inputDataset;
  }

  public void setInputDataset(IdWithName inputDataset) {
    this.inputDataset = inputDataset;
  }

  public Plugin flowSteps(List<IdWithName> flowSteps) {
    this.flowSteps = flowSteps;
    return this;
  }

  public Plugin addFlowStepsItem(IdWithName flowStepsItem) {
    if (this.flowSteps == null) {
      this.flowSteps = new ArrayList<IdWithName>();
    }
    this.flowSteps.add(flowStepsItem);
    return this;
  }

   /**
   * Get flowSteps
   * @return flowSteps
  **/
  @ApiModelProperty(value = "")
  public List<IdWithName> getFlowSteps() {
    return flowSteps;
  }

  public void setFlowSteps(List<IdWithName> flowSteps) {
    this.flowSteps = flowSteps;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Plugin plugin = (Plugin) o;
    return Objects.equals(this.id, plugin.id) &&
        Objects.equals(this.displayName, plugin.displayName) &&
        Objects.equals(this.description, plugin.description) &&
        Objects.equals(this.connectorType, plugin.connectorType) &&
        Objects.equals(this.inputDataset, plugin.inputDataset) &&
        Objects.equals(this.flowSteps, plugin.flowSteps);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, displayName, description, connectorType, inputDataset, flowSteps);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Plugin {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    connectorType: ").append(toIndentedString(connectorType)).append("\n");
    sb.append("    inputDataset: ").append(toIndentedString(inputDataset)).append("\n");
    sb.append("    flowSteps: ").append(toIndentedString(flowSteps)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

