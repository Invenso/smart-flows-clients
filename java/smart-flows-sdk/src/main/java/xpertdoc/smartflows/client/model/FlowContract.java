/*
 * Xpertdoc SmartFlows
 * This describes the REST api for one Xpertdoc SmartFlows project
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package xpertdoc.smartflows.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * FlowContract
 */
@javax.annotation.Generated(value = "xpertdoc.smartflows.codegen.languages.JavaClientCodegen", date = "2018-05-22T10:07:28.195+02:00")
public class FlowContract {
  @SerializedName("id")
  private String id = null;

  @SerializedName("displayName")
  private String displayName = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("inputSchema")
  private Object inputSchema = null;

  @SerializedName("outputSchema")
  private Object outputSchema = null;

  public FlowContract id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public FlowContract displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @ApiModelProperty(value = "")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public FlowContract description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public FlowContract inputSchema(Object inputSchema) {
    this.inputSchema = inputSchema;
    return this;
  }

   /**
   * Get inputSchema
   * @return inputSchema
  **/
  @ApiModelProperty(value = "")
  public Object getInputSchema() {
    return inputSchema;
  }

  public void setInputSchema(Object inputSchema) {
    this.inputSchema = inputSchema;
  }

  public FlowContract outputSchema(Object outputSchema) {
    this.outputSchema = outputSchema;
    return this;
  }

   /**
   * Get outputSchema
   * @return outputSchema
  **/
  @ApiModelProperty(value = "")
  public Object getOutputSchema() {
    return outputSchema;
  }

  public void setOutputSchema(Object outputSchema) {
    this.outputSchema = outputSchema;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlowContract flowContract = (FlowContract) o;
    return Objects.equals(this.id, flowContract.id) &&
        Objects.equals(this.displayName, flowContract.displayName) &&
        Objects.equals(this.description, flowContract.description) &&
        Objects.equals(this.inputSchema, flowContract.inputSchema) &&
        Objects.equals(this.outputSchema, flowContract.outputSchema);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, displayName, description, inputSchema, outputSchema);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlowContract {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    inputSchema: ").append(toIndentedString(inputSchema)).append("\n");
    sb.append("    outputSchema: ").append(toIndentedString(outputSchema)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

