/*
 * Xpertdoc SmartFlows
 * This describes the REST api for one Xpertdoc SmartFlows project
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package xpertdoc.smartflows.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.Objects;

/**
 * Data
 */
@javax.annotation.Generated(value = "xpertdoc.smartflows.codegen.languages.JavaClientCodegen", date = "2018-05-22T10:07:28.195+02:00")
public class Data {
  @SerializedName("id")
  private String id = null;

  @SerializedName("displayName")
  private String displayName = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("createdAt")
  private String createdAt = null;

  @SerializedName("createdBy")
  private IdWithName createdBy = null;

  @SerializedName("modifiedAt")
  private String modifiedAt = null;

  @SerializedName("modifiedBy")
  private IdWithName modifiedBy = null;

  @SerializedName("dataset")
  private IdWithName dataset = null;

  @SerializedName("pluginDataset")
  private IdWithName pluginDataset = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    REFERENCE("reference"),
    
    VALUE("value");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("value")
  private DataValue value = null;

  @SerializedName("reference")
  private DataReference reference = null;

  @SerializedName("dataAvailable")
  private Boolean dataAvailable = null;

  @SerializedName("expiration")
  private String expiration = null;

  @SerializedName("usage")
  private ObjectUsage usage = null;

  @SerializedName("flowExecution")
  private FlowExecution flowExecution = null;

  @SerializedName("contentType")
  private String contentType = null;

  public Data id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Data displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @ApiModelProperty(value = "")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public Data description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Data createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(value = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public Data createdBy(IdWithName createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @ApiModelProperty(value = "")
  public IdWithName getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(IdWithName createdBy) {
    this.createdBy = createdBy;
  }

  public Data modifiedAt(String modifiedAt) {
    this.modifiedAt = modifiedAt;
    return this;
  }

   /**
   * Get modifiedAt
   * @return modifiedAt
  **/
  @ApiModelProperty(value = "")
  public String getModifiedAt() {
    return modifiedAt;
  }

  public void setModifiedAt(String modifiedAt) {
    this.modifiedAt = modifiedAt;
  }

  public Data modifiedBy(IdWithName modifiedBy) {
    this.modifiedBy = modifiedBy;
    return this;
  }

   /**
   * Get modifiedBy
   * @return modifiedBy
  **/
  @ApiModelProperty(value = "")
  public IdWithName getModifiedBy() {
    return modifiedBy;
  }

  public void setModifiedBy(IdWithName modifiedBy) {
    this.modifiedBy = modifiedBy;
  }

  public Data dataset(IdWithName dataset) {
    this.dataset = dataset;
    return this;
  }

   /**
   * Get dataset
   * @return dataset
  **/
  @ApiModelProperty(value = "")
  public IdWithName getDataset() {
    return dataset;
  }

  public void setDataset(IdWithName dataset) {
    this.dataset = dataset;
  }

  public Data pluginDataset(IdWithName pluginDataset) {
    this.pluginDataset = pluginDataset;
    return this;
  }

   /**
   * Get pluginDataset
   * @return pluginDataset
  **/
  @ApiModelProperty(value = "")
  public IdWithName getPluginDataset() {
    return pluginDataset;
  }

  public void setPluginDataset(IdWithName pluginDataset) {
    this.pluginDataset = pluginDataset;
  }

  public Data type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public Data value(DataValue value) {
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @ApiModelProperty(value = "")
  public DataValue getValue() {
    return value;
  }

  public void setValue(DataValue value) {
    this.value = value;
  }

  public Data reference(DataReference reference) {
    this.reference = reference;
    return this;
  }

   /**
   * Get reference
   * @return reference
  **/
  @ApiModelProperty(value = "")
  public DataReference getReference() {
    return reference;
  }

  public void setReference(DataReference reference) {
    this.reference = reference;
  }

  public Data dataAvailable(Boolean dataAvailable) {
    this.dataAvailable = dataAvailable;
    return this;
  }

   /**
   * Get dataAvailable
   * @return dataAvailable
  **/
  @ApiModelProperty(value = "")
  public Boolean isDataAvailable() {
    return dataAvailable;
  }

  public void setDataAvailable(Boolean dataAvailable) {
    this.dataAvailable = dataAvailable;
  }

  public Data expiration(String expiration) {
    this.expiration = expiration;
    return this;
  }

   /**
   * Get expiration
   * @return expiration
  **/
  @ApiModelProperty(value = "")
  public String getExpiration() {
    return expiration;
  }

  public void setExpiration(String expiration) {
    this.expiration = expiration;
  }

  public Data usage(ObjectUsage usage) {
    this.usage = usage;
    return this;
  }

   /**
   * Get usage
   * @return usage
  **/
  @ApiModelProperty(value = "")
  public ObjectUsage getUsage() {
    return usage;
  }

  public void setUsage(ObjectUsage usage) {
    this.usage = usage;
  }

  public Data flowExecution(FlowExecution flowExecution) {
    this.flowExecution = flowExecution;
    return this;
  }

   /**
   * Get flowExecution
   * @return flowExecution
  **/
  @ApiModelProperty(value = "")
  public FlowExecution getFlowExecution() {
    return flowExecution;
  }

  public void setFlowExecution(FlowExecution flowExecution) {
    this.flowExecution = flowExecution;
  }

  public Data contentType(String contentType) {
    this.contentType = contentType;
    return this;
  }

   /**
   * Get contentType
   * @return contentType
  **/
  @ApiModelProperty(value = "")
  public String getContentType() {
    return contentType;
  }

  public void setContentType(String contentType) {
    this.contentType = contentType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Data data = (Data) o;
    return Objects.equals(this.id, data.id) &&
        Objects.equals(this.displayName, data.displayName) &&
        Objects.equals(this.description, data.description) &&
        Objects.equals(this.createdAt, data.createdAt) &&
        Objects.equals(this.createdBy, data.createdBy) &&
        Objects.equals(this.modifiedAt, data.modifiedAt) &&
        Objects.equals(this.modifiedBy, data.modifiedBy) &&
        Objects.equals(this.dataset, data.dataset) &&
        Objects.equals(this.pluginDataset, data.pluginDataset) &&
        Objects.equals(this.type, data.type) &&
        Objects.equals(this.value, data.value) &&
        Objects.equals(this.reference, data.reference) &&
        Objects.equals(this.dataAvailable, data.dataAvailable) &&
        Objects.equals(this.expiration, data.expiration) &&
        Objects.equals(this.usage, data.usage) &&
        Objects.equals(this.flowExecution, data.flowExecution) &&
        Objects.equals(this.contentType, data.contentType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, displayName, description, createdAt, createdBy, modifiedAt, modifiedBy, dataset, pluginDataset, type, value, reference, dataAvailable, expiration, usage, flowExecution, contentType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Data {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    modifiedAt: ").append(toIndentedString(modifiedAt)).append("\n");
    sb.append("    modifiedBy: ").append(toIndentedString(modifiedBy)).append("\n");
    sb.append("    dataset: ").append(toIndentedString(dataset)).append("\n");
    sb.append("    pluginDataset: ").append(toIndentedString(pluginDataset)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    dataAvailable: ").append(toIndentedString(dataAvailable)).append("\n");
    sb.append("    expiration: ").append(toIndentedString(expiration)).append("\n");
    sb.append("    usage: ").append(toIndentedString(usage)).append("\n");
    sb.append("    flowExecution: ").append(toIndentedString(flowExecution)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

