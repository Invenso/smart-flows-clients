/*
 * Xpertdoc SmartFlows
 * This describes the REST api for one Xpertdoc SmartFlows project
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package xpertdoc.smartflows.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * FlowExecutionStateOutput
 */
@javax.annotation.Generated(value = "xpertdoc.smartflows.codegen.languages.JavaClientCodegen", date = "2018-05-22T10:07:28.195+02:00")
public class FlowExecutionStateOutput {
  @SerializedName("parts")
  private List<FlowExecutionStateOutputParts> parts = null;

  @SerializedName("schema")
  private Object schema = null;

  @SerializedName("model")
  private Object model = null;

  @SerializedName("form")
  private List<Object> form = null;

  public FlowExecutionStateOutput parts(List<FlowExecutionStateOutputParts> parts) {
    this.parts = parts;
    return this;
  }

  public FlowExecutionStateOutput addPartsItem(FlowExecutionStateOutputParts partsItem) {
    if (this.parts == null) {
      this.parts = new ArrayList<FlowExecutionStateOutputParts>();
    }
    this.parts.add(partsItem);
    return this;
  }

   /**
   * Get parts
   * @return parts
  **/
  @ApiModelProperty(value = "")
  public List<FlowExecutionStateOutputParts> getParts() {
    return parts;
  }

  public void setParts(List<FlowExecutionStateOutputParts> parts) {
    this.parts = parts;
  }

  public FlowExecutionStateOutput schema(Object schema) {
    this.schema = schema;
    return this;
  }

   /**
   * Get schema
   * @return schema
  **/
  @ApiModelProperty(value = "")
  public Object getSchema() {
    return schema;
  }

  public void setSchema(Object schema) {
    this.schema = schema;
  }

  public FlowExecutionStateOutput model(Object model) {
    this.model = model;
    return this;
  }

   /**
   * Get model
   * @return model
  **/
  @ApiModelProperty(value = "")
  public Object getModel() {
    return model;
  }

  public void setModel(Object model) {
    this.model = model;
  }

  public FlowExecutionStateOutput form(List<Object> form) {
    this.form = form;
    return this;
  }

  public FlowExecutionStateOutput addFormItem(Object formItem) {
    if (this.form == null) {
      this.form = new ArrayList<Object>();
    }
    this.form.add(formItem);
    return this;
  }

   /**
   * Get form
   * @return form
  **/
  @ApiModelProperty(value = "")
  public List<Object> getForm() {
    return form;
  }

  public void setForm(List<Object> form) {
    this.form = form;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlowExecutionStateOutput flowExecutionStateOutput = (FlowExecutionStateOutput) o;
    return Objects.equals(this.parts, flowExecutionStateOutput.parts) &&
        Objects.equals(this.schema, flowExecutionStateOutput.schema) &&
        Objects.equals(this.model, flowExecutionStateOutput.model) &&
        Objects.equals(this.form, flowExecutionStateOutput.form);
  }

  @Override
  public int hashCode() {
    return Objects.hash(parts, schema, model, form);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlowExecutionStateOutput {\n");
    
    sb.append("    parts: ").append(toIndentedString(parts)).append("\n");
    sb.append("    schema: ").append(toIndentedString(schema)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    form: ").append(toIndentedString(form)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

