/*
 * Xpertdoc SmartFlows
 * This describes the REST api for one Xpertdoc SmartFlows project
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package xpertdoc.smartflows.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Document
 */
@javax.annotation.Generated(value = "xpertdoc.smartflows.codegen.languages.JavaClientCodegen", date = "2018-05-22T10:07:28.195+02:00")
public class Document {
  @SerializedName("id")
  private String id = null;

  @SerializedName("displayName")
  private String displayName = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("createdAt")
  private String createdAt = null;

  @SerializedName("createdBy")
  private IdWithName createdBy = null;

  @SerializedName("modifiedAt")
  private String modifiedAt = null;

  @SerializedName("modifiedBy")
  private IdWithName modifiedBy = null;

  @SerializedName("templateId")
  private IdWithName templateId = null;

  @SerializedName("language")
  private IdWithName language = null;

  @SerializedName("origin")
  private IdWithName origin = null;

  @SerializedName("finished")
  private Boolean finished = null;

  @SerializedName("expiration")
  private String expiration = null;

  @SerializedName("contentType")
  private String contentType = null;

  @SerializedName("postProcessing")
  private List<DocumentPostProcessing> postProcessing = null;

  @SerializedName("usage")
  private ObjectUsage usage = null;

  public Document id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Document displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @ApiModelProperty(value = "")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public Document description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Document createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(value = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public Document createdBy(IdWithName createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @ApiModelProperty(value = "")
  public IdWithName getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(IdWithName createdBy) {
    this.createdBy = createdBy;
  }

  public Document modifiedAt(String modifiedAt) {
    this.modifiedAt = modifiedAt;
    return this;
  }

   /**
   * Get modifiedAt
   * @return modifiedAt
  **/
  @ApiModelProperty(value = "")
  public String getModifiedAt() {
    return modifiedAt;
  }

  public void setModifiedAt(String modifiedAt) {
    this.modifiedAt = modifiedAt;
  }

  public Document modifiedBy(IdWithName modifiedBy) {
    this.modifiedBy = modifiedBy;
    return this;
  }

   /**
   * Get modifiedBy
   * @return modifiedBy
  **/
  @ApiModelProperty(value = "")
  public IdWithName getModifiedBy() {
    return modifiedBy;
  }

  public void setModifiedBy(IdWithName modifiedBy) {
    this.modifiedBy = modifiedBy;
  }

  public Document templateId(IdWithName templateId) {
    this.templateId = templateId;
    return this;
  }

   /**
   * Get templateId
   * @return templateId
  **/
  @ApiModelProperty(value = "")
  public IdWithName getTemplateId() {
    return templateId;
  }

  public void setTemplateId(IdWithName templateId) {
    this.templateId = templateId;
  }

  public Document language(IdWithName language) {
    this.language = language;
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @ApiModelProperty(value = "")
  public IdWithName getLanguage() {
    return language;
  }

  public void setLanguage(IdWithName language) {
    this.language = language;
  }

  public Document origin(IdWithName origin) {
    this.origin = origin;
    return this;
  }

   /**
   * Get origin
   * @return origin
  **/
  @ApiModelProperty(value = "")
  public IdWithName getOrigin() {
    return origin;
  }

  public void setOrigin(IdWithName origin) {
    this.origin = origin;
  }

  public Document finished(Boolean finished) {
    this.finished = finished;
    return this;
  }

   /**
   * Get finished
   * @return finished
  **/
  @ApiModelProperty(value = "")
  public Boolean isFinished() {
    return finished;
  }

  public void setFinished(Boolean finished) {
    this.finished = finished;
  }

  public Document expiration(String expiration) {
    this.expiration = expiration;
    return this;
  }

   /**
   * Get expiration
   * @return expiration
  **/
  @ApiModelProperty(value = "")
  public String getExpiration() {
    return expiration;
  }

  public void setExpiration(String expiration) {
    this.expiration = expiration;
  }

  public Document contentType(String contentType) {
    this.contentType = contentType;
    return this;
  }

   /**
   * Get contentType
   * @return contentType
  **/
  @ApiModelProperty(value = "")
  public String getContentType() {
    return contentType;
  }

  public void setContentType(String contentType) {
    this.contentType = contentType;
  }

  public Document postProcessing(List<DocumentPostProcessing> postProcessing) {
    this.postProcessing = postProcessing;
    return this;
  }

  public Document addPostProcessingItem(DocumentPostProcessing postProcessingItem) {
    if (this.postProcessing == null) {
      this.postProcessing = new ArrayList<DocumentPostProcessing>();
    }
    this.postProcessing.add(postProcessingItem);
    return this;
  }

   /**
   * Get postProcessing
   * @return postProcessing
  **/
  @ApiModelProperty(value = "")
  public List<DocumentPostProcessing> getPostProcessing() {
    return postProcessing;
  }

  public void setPostProcessing(List<DocumentPostProcessing> postProcessing) {
    this.postProcessing = postProcessing;
  }

  public Document usage(ObjectUsage usage) {
    this.usage = usage;
    return this;
  }

   /**
   * Get usage
   * @return usage
  **/
  @ApiModelProperty(value = "")
  public ObjectUsage getUsage() {
    return usage;
  }

  public void setUsage(ObjectUsage usage) {
    this.usage = usage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Document document = (Document) o;
    return Objects.equals(this.id, document.id) &&
        Objects.equals(this.displayName, document.displayName) &&
        Objects.equals(this.description, document.description) &&
        Objects.equals(this.createdAt, document.createdAt) &&
        Objects.equals(this.createdBy, document.createdBy) &&
        Objects.equals(this.modifiedAt, document.modifiedAt) &&
        Objects.equals(this.modifiedBy, document.modifiedBy) &&
        Objects.equals(this.templateId, document.templateId) &&
        Objects.equals(this.language, document.language) &&
        Objects.equals(this.origin, document.origin) &&
        Objects.equals(this.finished, document.finished) &&
        Objects.equals(this.expiration, document.expiration) &&
        Objects.equals(this.contentType, document.contentType) &&
        Objects.equals(this.postProcessing, document.postProcessing) &&
        Objects.equals(this.usage, document.usage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, displayName, description, createdAt, createdBy, modifiedAt, modifiedBy, templateId, language, origin, finished, expiration, contentType, postProcessing, usage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Document {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    modifiedAt: ").append(toIndentedString(modifiedAt)).append("\n");
    sb.append("    modifiedBy: ").append(toIndentedString(modifiedBy)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    finished: ").append(toIndentedString(finished)).append("\n");
    sb.append("    expiration: ").append(toIndentedString(expiration)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    postProcessing: ").append(toIndentedString(postProcessing)).append("\n");
    sb.append("    usage: ").append(toIndentedString(usage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

