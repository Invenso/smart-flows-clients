/*
 * Xpertdoc SmartFlows
 * This describes the REST api for one Xpertdoc SmartFlows project
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package xpertdoc.smartflows.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * EntityDefinition
 */
@javax.annotation.Generated(value = "xpertdoc.smartflows.codegen.languages.JavaClientCodegen", date = "2018-05-22T10:07:28.195+02:00")
public class EntityDefinition {
  @SerializedName("name")
  private String name = null;

  @SerializedName("displayName")
  private String displayName = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("canBePrimary")
  private Boolean canBePrimary = null;

  @SerializedName("fields")
  private List<EntityField> fields = null;

  @SerializedName("lookups")
  private List<EntityDefinitionLookups> lookups = null;

  @SerializedName("relationships")
  private List<EntityDefinitionRelationships> relationships = null;

  public EntityDefinition name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public EntityDefinition displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @ApiModelProperty(value = "")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public EntityDefinition description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public EntityDefinition canBePrimary(Boolean canBePrimary) {
    this.canBePrimary = canBePrimary;
    return this;
  }

   /**
   * Get canBePrimary
   * @return canBePrimary
  **/
  @ApiModelProperty(value = "")
  public Boolean isCanBePrimary() {
    return canBePrimary;
  }

  public void setCanBePrimary(Boolean canBePrimary) {
    this.canBePrimary = canBePrimary;
  }

  public EntityDefinition fields(List<EntityField> fields) {
    this.fields = fields;
    return this;
  }

  public EntityDefinition addFieldsItem(EntityField fieldsItem) {
    if (this.fields == null) {
      this.fields = new ArrayList<EntityField>();
    }
    this.fields.add(fieldsItem);
    return this;
  }

   /**
   * Get fields
   * @return fields
  **/
  @ApiModelProperty(value = "")
  public List<EntityField> getFields() {
    return fields;
  }

  public void setFields(List<EntityField> fields) {
    this.fields = fields;
  }

  public EntityDefinition lookups(List<EntityDefinitionLookups> lookups) {
    this.lookups = lookups;
    return this;
  }

  public EntityDefinition addLookupsItem(EntityDefinitionLookups lookupsItem) {
    if (this.lookups == null) {
      this.lookups = new ArrayList<EntityDefinitionLookups>();
    }
    this.lookups.add(lookupsItem);
    return this;
  }

   /**
   * Get lookups
   * @return lookups
  **/
  @ApiModelProperty(value = "")
  public List<EntityDefinitionLookups> getLookups() {
    return lookups;
  }

  public void setLookups(List<EntityDefinitionLookups> lookups) {
    this.lookups = lookups;
  }

  public EntityDefinition relationships(List<EntityDefinitionRelationships> relationships) {
    this.relationships = relationships;
    return this;
  }

  public EntityDefinition addRelationshipsItem(EntityDefinitionRelationships relationshipsItem) {
    if (this.relationships == null) {
      this.relationships = new ArrayList<EntityDefinitionRelationships>();
    }
    this.relationships.add(relationshipsItem);
    return this;
  }

   /**
   * Get relationships
   * @return relationships
  **/
  @ApiModelProperty(value = "")
  public List<EntityDefinitionRelationships> getRelationships() {
    return relationships;
  }

  public void setRelationships(List<EntityDefinitionRelationships> relationships) {
    this.relationships = relationships;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EntityDefinition entityDefinition = (EntityDefinition) o;
    return Objects.equals(this.name, entityDefinition.name) &&
        Objects.equals(this.displayName, entityDefinition.displayName) &&
        Objects.equals(this.description, entityDefinition.description) &&
        Objects.equals(this.canBePrimary, entityDefinition.canBePrimary) &&
        Objects.equals(this.fields, entityDefinition.fields) &&
        Objects.equals(this.lookups, entityDefinition.lookups) &&
        Objects.equals(this.relationships, entityDefinition.relationships);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, displayName, description, canBePrimary, fields, lookups, relationships);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EntityDefinition {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    canBePrimary: ").append(toIndentedString(canBePrimary)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    lookups: ").append(toIndentedString(lookups)).append("\n");
    sb.append("    relationships: ").append(toIndentedString(relationships)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

