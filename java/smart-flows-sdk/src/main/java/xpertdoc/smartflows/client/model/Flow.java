/*
 * Xpertdoc SmartFlows
 * This describes the REST api for one Xpertdoc SmartFlows project
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package xpertdoc.smartflows.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Flow
 */
@javax.annotation.Generated(value = "xpertdoc.smartflows.codegen.languages.JavaClientCodegen", date = "2018-05-22T10:07:28.195+02:00")
public class Flow {
  @SerializedName("id")
  private String id = null;

  @SerializedName("displayName")
  private String displayName = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("createdAt")
  private String createdAt = null;

  @SerializedName("createdBy")
  private IdWithName createdBy = null;

  @SerializedName("modifiedAt")
  private String modifiedAt = null;

  @SerializedName("modifiedBy")
  private IdWithName modifiedBy = null;

  @SerializedName("tagGroups")
  private List<TagGroupRef> tagGroups = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    SIMPLE("simple"),
    
    ADVANCED("advanced");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = TypeEnum.ADVANCED;

  @SerializedName("body")
  private FlowBody body = null;

  @SerializedName("input")
  private FlowInput input = null;

  @SerializedName("primaryEntity")
  private String primaryEntity = null;

  @SerializedName("primaryTemplate")
  private IdWithName primaryTemplate = null;

  @SerializedName("settings")
  private FlowSettings settings = null;

  public Flow id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Flow displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @ApiModelProperty(value = "")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public Flow description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Flow createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(value = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public Flow createdBy(IdWithName createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @ApiModelProperty(value = "")
  public IdWithName getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(IdWithName createdBy) {
    this.createdBy = createdBy;
  }

  public Flow modifiedAt(String modifiedAt) {
    this.modifiedAt = modifiedAt;
    return this;
  }

   /**
   * Get modifiedAt
   * @return modifiedAt
  **/
  @ApiModelProperty(value = "")
  public String getModifiedAt() {
    return modifiedAt;
  }

  public void setModifiedAt(String modifiedAt) {
    this.modifiedAt = modifiedAt;
  }

  public Flow modifiedBy(IdWithName modifiedBy) {
    this.modifiedBy = modifiedBy;
    return this;
  }

   /**
   * Get modifiedBy
   * @return modifiedBy
  **/
  @ApiModelProperty(value = "")
  public IdWithName getModifiedBy() {
    return modifiedBy;
  }

  public void setModifiedBy(IdWithName modifiedBy) {
    this.modifiedBy = modifiedBy;
  }

  public Flow tagGroups(List<TagGroupRef> tagGroups) {
    this.tagGroups = tagGroups;
    return this;
  }

  public Flow addTagGroupsItem(TagGroupRef tagGroupsItem) {
    if (this.tagGroups == null) {
      this.tagGroups = new ArrayList<TagGroupRef>();
    }
    this.tagGroups.add(tagGroupsItem);
    return this;
  }

   /**
   * Get tagGroups
   * @return tagGroups
  **/
  @ApiModelProperty(value = "")
  public List<TagGroupRef> getTagGroups() {
    return tagGroups;
  }

  public void setTagGroups(List<TagGroupRef> tagGroups) {
    this.tagGroups = tagGroups;
  }

  public Flow type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public Flow body(FlowBody body) {
    this.body = body;
    return this;
  }

   /**
   * Get body
   * @return body
  **/
  @ApiModelProperty(value = "")
  public FlowBody getBody() {
    return body;
  }

  public void setBody(FlowBody body) {
    this.body = body;
  }

  public Flow input(FlowInput input) {
    this.input = input;
    return this;
  }

   /**
   * Get input
   * @return input
  **/
  @ApiModelProperty(value = "")
  public FlowInput getInput() {
    return input;
  }

  public void setInput(FlowInput input) {
    this.input = input;
  }

  public Flow primaryEntity(String primaryEntity) {
    this.primaryEntity = primaryEntity;
    return this;
  }

   /**
   * Get primaryEntity
   * @return primaryEntity
  **/
  @ApiModelProperty(value = "")
  public String getPrimaryEntity() {
    return primaryEntity;
  }

  public void setPrimaryEntity(String primaryEntity) {
    this.primaryEntity = primaryEntity;
  }

  public Flow primaryTemplate(IdWithName primaryTemplate) {
    this.primaryTemplate = primaryTemplate;
    return this;
  }

   /**
   * Get primaryTemplate
   * @return primaryTemplate
  **/
  @ApiModelProperty(value = "")
  public IdWithName getPrimaryTemplate() {
    return primaryTemplate;
  }

  public void setPrimaryTemplate(IdWithName primaryTemplate) {
    this.primaryTemplate = primaryTemplate;
  }

  public Flow settings(FlowSettings settings) {
    this.settings = settings;
    return this;
  }

   /**
   * Get settings
   * @return settings
  **/
  @ApiModelProperty(value = "")
  public FlowSettings getSettings() {
    return settings;
  }

  public void setSettings(FlowSettings settings) {
    this.settings = settings;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Flow flow = (Flow) o;
    return Objects.equals(this.id, flow.id) &&
        Objects.equals(this.displayName, flow.displayName) &&
        Objects.equals(this.description, flow.description) &&
        Objects.equals(this.createdAt, flow.createdAt) &&
        Objects.equals(this.createdBy, flow.createdBy) &&
        Objects.equals(this.modifiedAt, flow.modifiedAt) &&
        Objects.equals(this.modifiedBy, flow.modifiedBy) &&
        Objects.equals(this.tagGroups, flow.tagGroups) &&
        Objects.equals(this.type, flow.type) &&
        Objects.equals(this.body, flow.body) &&
        Objects.equals(this.input, flow.input) &&
        Objects.equals(this.primaryEntity, flow.primaryEntity) &&
        Objects.equals(this.primaryTemplate, flow.primaryTemplate) &&
        Objects.equals(this.settings, flow.settings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, displayName, description, createdAt, createdBy, modifiedAt, modifiedBy, tagGroups, type, body, input, primaryEntity, primaryTemplate, settings);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Flow {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    modifiedAt: ").append(toIndentedString(modifiedAt)).append("\n");
    sb.append("    modifiedBy: ").append(toIndentedString(modifiedBy)).append("\n");
    sb.append("    tagGroups: ").append(toIndentedString(tagGroups)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    input: ").append(toIndentedString(input)).append("\n");
    sb.append("    primaryEntity: ").append(toIndentedString(primaryEntity)).append("\n");
    sb.append("    primaryTemplate: ").append(toIndentedString(primaryTemplate)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

