/*
 * Xpertdoc SmartFlows
 * This describes the REST api for one Xpertdoc SmartFlows project
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package xpertdoc.smartflows.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.Objects;

/**
 * Printer
 */
@javax.annotation.Generated(value = "xpertdoc.smartflows.codegen.languages.JavaClientCodegen", date = "2018-05-22T10:07:28.195+02:00")
public class Printer {
  @SerializedName("id")
  private String id = null;

  @SerializedName("displayName")
  private String displayName = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("createdAt")
  private String createdAt = null;

  @SerializedName("createdBy")
  private IdWithName createdBy = null;

  @SerializedName("modifiedAt")
  private String modifiedAt = null;

  @SerializedName("modifiedBy")
  private IdWithName modifiedBy = null;

  @SerializedName("definition")
  private IdWithName definition = null;

  /**
   * Gets or Sets flavor
   */
  @JsonAdapter(FlavorEnum.Adapter.class)
  public enum FlavorEnum {
    JPS("jps"),
    
    GCP("gcp");

    private String value;

    FlavorEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FlavorEnum fromValue(String text) {
      for (FlavorEnum b : FlavorEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<FlavorEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FlavorEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FlavorEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return FlavorEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("flavor")
  private FlavorEnum flavor = null;

  @SerializedName("defaultPrinter")
  private Boolean defaultPrinter = false;

  @SerializedName("properties")
  private PrinterProperties properties = null;

  public Printer id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Printer displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @ApiModelProperty(required = true, value = "")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public Printer description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Printer createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(value = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public Printer createdBy(IdWithName createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @ApiModelProperty(value = "")
  public IdWithName getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(IdWithName createdBy) {
    this.createdBy = createdBy;
  }

  public Printer modifiedAt(String modifiedAt) {
    this.modifiedAt = modifiedAt;
    return this;
  }

   /**
   * Get modifiedAt
   * @return modifiedAt
  **/
  @ApiModelProperty(value = "")
  public String getModifiedAt() {
    return modifiedAt;
  }

  public void setModifiedAt(String modifiedAt) {
    this.modifiedAt = modifiedAt;
  }

  public Printer modifiedBy(IdWithName modifiedBy) {
    this.modifiedBy = modifiedBy;
    return this;
  }

   /**
   * Get modifiedBy
   * @return modifiedBy
  **/
  @ApiModelProperty(value = "")
  public IdWithName getModifiedBy() {
    return modifiedBy;
  }

  public void setModifiedBy(IdWithName modifiedBy) {
    this.modifiedBy = modifiedBy;
  }

  public Printer definition(IdWithName definition) {
    this.definition = definition;
    return this;
  }

   /**
   * Get definition
   * @return definition
  **/
  @ApiModelProperty(required = true, value = "")
  public IdWithName getDefinition() {
    return definition;
  }

  public void setDefinition(IdWithName definition) {
    this.definition = definition;
  }

  public Printer flavor(FlavorEnum flavor) {
    this.flavor = flavor;
    return this;
  }

   /**
   * Get flavor
   * @return flavor
  **/
  @ApiModelProperty(value = "")
  public FlavorEnum getFlavor() {
    return flavor;
  }

  public void setFlavor(FlavorEnum flavor) {
    this.flavor = flavor;
  }

  public Printer defaultPrinter(Boolean defaultPrinter) {
    this.defaultPrinter = defaultPrinter;
    return this;
  }

   /**
   * Get defaultPrinter
   * @return defaultPrinter
  **/
  @ApiModelProperty(value = "")
  public Boolean isDefaultPrinter() {
    return defaultPrinter;
  }

  public void setDefaultPrinter(Boolean defaultPrinter) {
    this.defaultPrinter = defaultPrinter;
  }

  public Printer properties(PrinterProperties properties) {
    this.properties = properties;
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @ApiModelProperty(value = "")
  public PrinterProperties getProperties() {
    return properties;
  }

  public void setProperties(PrinterProperties properties) {
    this.properties = properties;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Printer printer = (Printer) o;
    return Objects.equals(this.id, printer.id) &&
        Objects.equals(this.displayName, printer.displayName) &&
        Objects.equals(this.description, printer.description) &&
        Objects.equals(this.createdAt, printer.createdAt) &&
        Objects.equals(this.createdBy, printer.createdBy) &&
        Objects.equals(this.modifiedAt, printer.modifiedAt) &&
        Objects.equals(this.modifiedBy, printer.modifiedBy) &&
        Objects.equals(this.definition, printer.definition) &&
        Objects.equals(this.flavor, printer.flavor) &&
        Objects.equals(this.defaultPrinter, printer.defaultPrinter) &&
        Objects.equals(this.properties, printer.properties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, displayName, description, createdAt, createdBy, modifiedAt, modifiedBy, definition, flavor, defaultPrinter, properties);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Printer {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    modifiedAt: ").append(toIndentedString(modifiedAt)).append("\n");
    sb.append("    modifiedBy: ").append(toIndentedString(modifiedBy)).append("\n");
    sb.append("    definition: ").append(toIndentedString(definition)).append("\n");
    sb.append("    flavor: ").append(toIndentedString(flavor)).append("\n");
    sb.append("    defaultPrinter: ").append(toIndentedString(defaultPrinter)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

