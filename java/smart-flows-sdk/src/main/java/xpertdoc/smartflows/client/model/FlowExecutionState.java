/*
 * Xpertdoc SmartFlows
 * This describes the REST api for one Xpertdoc SmartFlows project
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package xpertdoc.smartflows.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * FlowExecutionState
 */
@javax.annotation.Generated(value = "xpertdoc.smartflows.codegen.languages.JavaClientCodegen", date = "2018-05-22T10:07:28.195+02:00")
public class FlowExecutionState {
  @SerializedName("inputData")
  private IdWithName inputData = null;

  @SerializedName("output")
  private FlowExecutionStateOutput output = null;

  @SerializedName("stages")
  private List<FlowExecutionStage> stages = null;

  @SerializedName("iterations")
  private List<FlowExecutionIteration> iterations = null;

  @SerializedName("report")
  private List<FlowZoneState> report = null;

  @SerializedName("waitingFor")
  private String waitingFor = null;

  public FlowExecutionState inputData(IdWithName inputData) {
    this.inputData = inputData;
    return this;
  }

   /**
   * Get inputData
   * @return inputData
  **/
  @ApiModelProperty(value = "")
  public IdWithName getInputData() {
    return inputData;
  }

  public void setInputData(IdWithName inputData) {
    this.inputData = inputData;
  }

  public FlowExecutionState output(FlowExecutionStateOutput output) {
    this.output = output;
    return this;
  }

   /**
   * Get output
   * @return output
  **/
  @ApiModelProperty(value = "")
  public FlowExecutionStateOutput getOutput() {
    return output;
  }

  public void setOutput(FlowExecutionStateOutput output) {
    this.output = output;
  }

  public FlowExecutionState stages(List<FlowExecutionStage> stages) {
    this.stages = stages;
    return this;
  }

  public FlowExecutionState addStagesItem(FlowExecutionStage stagesItem) {
    if (this.stages == null) {
      this.stages = new ArrayList<FlowExecutionStage>();
    }
    this.stages.add(stagesItem);
    return this;
  }

   /**
   * Get stages
   * @return stages
  **/
  @ApiModelProperty(value = "")
  public List<FlowExecutionStage> getStages() {
    return stages;
  }

  public void setStages(List<FlowExecutionStage> stages) {
    this.stages = stages;
  }

  public FlowExecutionState iterations(List<FlowExecutionIteration> iterations) {
    this.iterations = iterations;
    return this;
  }

  public FlowExecutionState addIterationsItem(FlowExecutionIteration iterationsItem) {
    if (this.iterations == null) {
      this.iterations = new ArrayList<FlowExecutionIteration>();
    }
    this.iterations.add(iterationsItem);
    return this;
  }

   /**
   * if the input supports multiple iterations, these are the iterations
   * @return iterations
  **/
  @ApiModelProperty(value = "if the input supports multiple iterations, these are the iterations")
  public List<FlowExecutionIteration> getIterations() {
    return iterations;
  }

  public void setIterations(List<FlowExecutionIteration> iterations) {
    this.iterations = iterations;
  }

  public FlowExecutionState report(List<FlowZoneState> report) {
    this.report = report;
    return this;
  }

  public FlowExecutionState addReportItem(FlowZoneState reportItem) {
    if (this.report == null) {
      this.report = new ArrayList<FlowZoneState>();
    }
    this.report.add(reportItem);
    return this;
  }

   /**
   * if the input supports multiple iterations, but groupToSingleDocument is enabled, these are the post processing zones. If the input does not support multiple iterations, these are the flow zones
   * @return report
  **/
  @ApiModelProperty(value = "if the input supports multiple iterations, but groupToSingleDocument is enabled, these are the post processing zones. If the input does not support multiple iterations, these are the flow zones")
  public List<FlowZoneState> getReport() {
    return report;
  }

  public void setReport(List<FlowZoneState> report) {
    this.report = report;
  }

  public FlowExecutionState waitingFor(String waitingFor) {
    this.waitingFor = waitingFor;
    return this;
  }

   /**
   * Get waitingFor
   * @return waitingFor
  **/
  @ApiModelProperty(value = "")
  public String getWaitingFor() {
    return waitingFor;
  }

  public void setWaitingFor(String waitingFor) {
    this.waitingFor = waitingFor;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlowExecutionState flowExecutionState = (FlowExecutionState) o;
    return Objects.equals(this.inputData, flowExecutionState.inputData) &&
        Objects.equals(this.output, flowExecutionState.output) &&
        Objects.equals(this.stages, flowExecutionState.stages) &&
        Objects.equals(this.iterations, flowExecutionState.iterations) &&
        Objects.equals(this.report, flowExecutionState.report) &&
        Objects.equals(this.waitingFor, flowExecutionState.waitingFor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(inputData, output, stages, iterations, report, waitingFor);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlowExecutionState {\n");
    
    sb.append("    inputData: ").append(toIndentedString(inputData)).append("\n");
    sb.append("    output: ").append(toIndentedString(output)).append("\n");
    sb.append("    stages: ").append(toIndentedString(stages)).append("\n");
    sb.append("    iterations: ").append(toIndentedString(iterations)).append("\n");
    sb.append("    report: ").append(toIndentedString(report)).append("\n");
    sb.append("    waitingFor: ").append(toIndentedString(waitingFor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

