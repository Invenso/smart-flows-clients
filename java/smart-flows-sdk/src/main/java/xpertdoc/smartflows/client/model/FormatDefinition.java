/*
 * Xpertdoc SmartFlows
 * This describes the REST api for one Xpertdoc SmartFlows project
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package xpertdoc.smartflows.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * FormatDefinition
 */
@javax.annotation.Generated(value = "xpertdoc.smartflows.codegen.languages.JavaClientCodegen", date = "2018-05-22T10:07:28.195+02:00")
public class FormatDefinition {
  @SerializedName("format")
  private String format = null;

  @SerializedName("sample")
  private String sample = null;

  @SerializedName("isDefault")
  private Boolean isDefault = false;

  @SerializedName("dateStyle")
  private DateFormatStyle dateStyle = null;

  @SerializedName("timeStyle")
  private DateFormatStyle timeStyle = null;

  public FormatDefinition format(String format) {
    this.format = format;
    return this;
  }

   /**
   * Get format
   * @return format
  **/
  @ApiModelProperty(value = "")
  public String getFormat() {
    return format;
  }

  public void setFormat(String format) {
    this.format = format;
  }

  public FormatDefinition sample(String sample) {
    this.sample = sample;
    return this;
  }

   /**
   * Get sample
   * @return sample
  **/
  @ApiModelProperty(value = "")
  public String getSample() {
    return sample;
  }

  public void setSample(String sample) {
    this.sample = sample;
  }

  public FormatDefinition isDefault(Boolean isDefault) {
    this.isDefault = isDefault;
    return this;
  }

   /**
   * Get isDefault
   * @return isDefault
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsDefault() {
    return isDefault;
  }

  public void setIsDefault(Boolean isDefault) {
    this.isDefault = isDefault;
  }

  public FormatDefinition dateStyle(DateFormatStyle dateStyle) {
    this.dateStyle = dateStyle;
    return this;
  }

   /**
   * Get dateStyle
   * @return dateStyle
  **/
  @ApiModelProperty(value = "")
  public DateFormatStyle getDateStyle() {
    return dateStyle;
  }

  public void setDateStyle(DateFormatStyle dateStyle) {
    this.dateStyle = dateStyle;
  }

  public FormatDefinition timeStyle(DateFormatStyle timeStyle) {
    this.timeStyle = timeStyle;
    return this;
  }

   /**
   * Get timeStyle
   * @return timeStyle
  **/
  @ApiModelProperty(value = "")
  public DateFormatStyle getTimeStyle() {
    return timeStyle;
  }

  public void setTimeStyle(DateFormatStyle timeStyle) {
    this.timeStyle = timeStyle;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FormatDefinition formatDefinition = (FormatDefinition) o;
    return Objects.equals(this.format, formatDefinition.format) &&
        Objects.equals(this.sample, formatDefinition.sample) &&
        Objects.equals(this.isDefault, formatDefinition.isDefault) &&
        Objects.equals(this.dateStyle, formatDefinition.dateStyle) &&
        Objects.equals(this.timeStyle, formatDefinition.timeStyle);
  }

  @Override
  public int hashCode() {
    return Objects.hash(format, sample, isDefault, dateStyle, timeStyle);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FormatDefinition {\n");
    
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    sample: ").append(toIndentedString(sample)).append("\n");
    sb.append("    isDefault: ").append(toIndentedString(isDefault)).append("\n");
    sb.append("    dateStyle: ").append(toIndentedString(dateStyle)).append("\n");
    sb.append("    timeStyle: ").append(toIndentedString(timeStyle)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

