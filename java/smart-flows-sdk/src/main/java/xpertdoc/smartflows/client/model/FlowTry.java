/*
 * Xpertdoc SmartFlows
 * This describes the REST api for one Xpertdoc SmartFlows project
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package xpertdoc.smartflows.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * FlowTry
 */
@javax.annotation.Generated(value = "xpertdoc.smartflows.codegen.languages.JavaClientCodegen", date = "2018-05-22T10:07:28.195+02:00")
public class FlowTry {
  @SerializedName("bodyTry")
  private List<FlowZone> bodyTry = null;

  @SerializedName("bodyCatch")
  private List<FlowZone> bodyCatch = null;

  public FlowTry bodyTry(List<FlowZone> bodyTry) {
    this.bodyTry = bodyTry;
    return this;
  }

  public FlowTry addBodyTryItem(FlowZone bodyTryItem) {
    if (this.bodyTry == null) {
      this.bodyTry = new ArrayList<FlowZone>();
    }
    this.bodyTry.add(bodyTryItem);
    return this;
  }

   /**
   * Get bodyTry
   * @return bodyTry
  **/
  @ApiModelProperty(value = "")
  public List<FlowZone> getBodyTry() {
    return bodyTry;
  }

  public void setBodyTry(List<FlowZone> bodyTry) {
    this.bodyTry = bodyTry;
  }

  public FlowTry bodyCatch(List<FlowZone> bodyCatch) {
    this.bodyCatch = bodyCatch;
    return this;
  }

  public FlowTry addBodyCatchItem(FlowZone bodyCatchItem) {
    if (this.bodyCatch == null) {
      this.bodyCatch = new ArrayList<FlowZone>();
    }
    this.bodyCatch.add(bodyCatchItem);
    return this;
  }

   /**
   * Get bodyCatch
   * @return bodyCatch
  **/
  @ApiModelProperty(value = "")
  public List<FlowZone> getBodyCatch() {
    return bodyCatch;
  }

  public void setBodyCatch(List<FlowZone> bodyCatch) {
    this.bodyCatch = bodyCatch;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlowTry flowTry = (FlowTry) o;
    return Objects.equals(this.bodyTry, flowTry.bodyTry) &&
        Objects.equals(this.bodyCatch, flowTry.bodyCatch);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bodyTry, bodyCatch);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlowTry {\n");
    
    sb.append("    bodyTry: ").append(toIndentedString(bodyTry)).append("\n");
    sb.append("    bodyCatch: ").append(toIndentedString(bodyCatch)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

