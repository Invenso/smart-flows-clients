/*
 * Xpertdoc SmartFlows
 * This describes the REST api for one Xpertdoc SmartFlows project
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package xpertdoc.smartflows.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;

/**
 * Gets or Sets cleanupAction
 */
@JsonAdapter(CleanupAction.Adapter.class)
public enum CleanupAction {
  
  REMOVEINTERNALSUCCESS("removeInternalSuccess"),
  
  REMOVEOUTPUTSUCCESS("removeOutputSuccess"),
  
  REMOVEFULLSUCCESS("removeFullSuccess"),
  
  REMOVEINTERNALERROR("removeInternalError"),
  
  REMOVEOUTPUTERROR("removeOutputError"),
  
  REMOVEFULLERROR("removeFullError"),
  
  REMOVEINTERNALCANCELLED("removeInternalCancelled"),
  
  REMOVEOUTPUTCANCELLED("removeOutputCancelled"),
  
  REMOVEFULLCANCELLED("removeFullCancelled"),
  
  REMOVEINTERNALINTERRUPTED("removeInternalInterrupted"),
  
  REMOVEOUTPUTINTERRUPTED("removeOutputInterrupted"),
  
  REMOVEFULLINTERRUPTED("removeFullInterrupted"),
  
  REMOVESELECTFLOW("removeSelectFlow"),
  
  INTERRUPTWAITING("interruptWaiting"),
  
  INTERRUPTUSERINPUT("interruptUserInput");

  private String value;

  CleanupAction(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static CleanupAction fromValue(String text) {
    for (CleanupAction b : CleanupAction.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<CleanupAction> {
    @Override
    public void write(final JsonWriter jsonWriter, final CleanupAction enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public CleanupAction read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return CleanupAction.fromValue(String.valueOf(value));
    }
  }
}

