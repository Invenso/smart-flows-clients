/*
 * Xpertdoc SmartFlows
 * This describes the REST api for one Xpertdoc SmartFlows project
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package xpertdoc.smartflows.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.Objects;

/**
 * PrinterDefinition
 */
@javax.annotation.Generated(value = "xpertdoc.smartflows.codegen.languages.JavaClientCodegen", date = "2018-05-22T10:07:28.195+02:00")
public class PrinterDefinition {
  @SerializedName("id")
  private String id = null;

  @SerializedName("displayName")
  private String displayName = null;

  @SerializedName("description")
  private String description = null;

  /**
   * Gets or Sets flavor
   */
  @JsonAdapter(FlavorEnum.Adapter.class)
  public enum FlavorEnum {
    JPS("jps"),
    
    GCP("gcp");

    private String value;

    FlavorEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FlavorEnum fromValue(String text) {
      for (FlavorEnum b : FlavorEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<FlavorEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FlavorEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FlavorEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return FlavorEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("flavor")
  private FlavorEnum flavor = null;

  @SerializedName("printerInfo")
  private PrinterDefinitionPrinterInfo printerInfo = null;

  public PrinterDefinition id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public PrinterDefinition displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @ApiModelProperty(required = true, value = "")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public PrinterDefinition description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public PrinterDefinition flavor(FlavorEnum flavor) {
    this.flavor = flavor;
    return this;
  }

   /**
   * Get flavor
   * @return flavor
  **/
  @ApiModelProperty(required = true, value = "")
  public FlavorEnum getFlavor() {
    return flavor;
  }

  public void setFlavor(FlavorEnum flavor) {
    this.flavor = flavor;
  }

  public PrinterDefinition printerInfo(PrinterDefinitionPrinterInfo printerInfo) {
    this.printerInfo = printerInfo;
    return this;
  }

   /**
   * Get printerInfo
   * @return printerInfo
  **/
  @ApiModelProperty(value = "")
  public PrinterDefinitionPrinterInfo getPrinterInfo() {
    return printerInfo;
  }

  public void setPrinterInfo(PrinterDefinitionPrinterInfo printerInfo) {
    this.printerInfo = printerInfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PrinterDefinition printerDefinition = (PrinterDefinition) o;
    return Objects.equals(this.id, printerDefinition.id) &&
        Objects.equals(this.displayName, printerDefinition.displayName) &&
        Objects.equals(this.description, printerDefinition.description) &&
        Objects.equals(this.flavor, printerDefinition.flavor) &&
        Objects.equals(this.printerInfo, printerDefinition.printerInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, displayName, description, flavor, printerInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PrinterDefinition {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    flavor: ").append(toIndentedString(flavor)).append("\n");
    sb.append("    printerInfo: ").append(toIndentedString(printerInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

