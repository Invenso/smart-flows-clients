/*
 * Xpertdoc SmartFlows
 * This describes the REST api for one Xpertdoc SmartFlows project
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package xpertdoc.smartflows.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * PrinterDefinitionPrinterInfoGcp
 */
@javax.annotation.Generated(value = "xpertdoc.smartflows.codegen.languages.JavaClientCodegen", date = "2018-05-22T10:07:28.195+02:00")
public class PrinterDefinitionPrinterInfoGcp {
  @SerializedName("connector")
  private IdWithName connector = null;

  @SerializedName("createTime")
  private String createTime = null;

  @SerializedName("updateTime")
  private String updateTime = null;

  @SerializedName("accessTime")
  private String accessTime = null;

  /**
   * Gets or Sets connectionStatus
   */
  @JsonAdapter(ConnectionStatusEnum.Adapter.class)
  public enum ConnectionStatusEnum {
    UNKNOWN("unknown"),
    
    ONLINE("online"),
    
    OFFLINE("offline"),
    
    DORMANT("dormant");

    private String value;

    ConnectionStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ConnectionStatusEnum fromValue(String text) {
      for (ConnectionStatusEnum b : ConnectionStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ConnectionStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ConnectionStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ConnectionStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ConnectionStatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("connectionStatus")
  private ConnectionStatusEnum connectionStatus = null;

  @SerializedName("vendorCapabilities")
  private List<GcpVendorCapability> vendorCapabilities = null;

  public PrinterDefinitionPrinterInfoGcp connector(IdWithName connector) {
    this.connector = connector;
    return this;
  }

   /**
   * Get connector
   * @return connector
  **/
  @ApiModelProperty(value = "")
  public IdWithName getConnector() {
    return connector;
  }

  public void setConnector(IdWithName connector) {
    this.connector = connector;
  }

  public PrinterDefinitionPrinterInfoGcp createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @ApiModelProperty(value = "")
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }

  public PrinterDefinitionPrinterInfoGcp updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @ApiModelProperty(value = "")
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }

  public PrinterDefinitionPrinterInfoGcp accessTime(String accessTime) {
    this.accessTime = accessTime;
    return this;
  }

   /**
   * Get accessTime
   * @return accessTime
  **/
  @ApiModelProperty(value = "")
  public String getAccessTime() {
    return accessTime;
  }

  public void setAccessTime(String accessTime) {
    this.accessTime = accessTime;
  }

  public PrinterDefinitionPrinterInfoGcp connectionStatus(ConnectionStatusEnum connectionStatus) {
    this.connectionStatus = connectionStatus;
    return this;
  }

   /**
   * Get connectionStatus
   * @return connectionStatus
  **/
  @ApiModelProperty(value = "")
  public ConnectionStatusEnum getConnectionStatus() {
    return connectionStatus;
  }

  public void setConnectionStatus(ConnectionStatusEnum connectionStatus) {
    this.connectionStatus = connectionStatus;
  }

  public PrinterDefinitionPrinterInfoGcp vendorCapabilities(List<GcpVendorCapability> vendorCapabilities) {
    this.vendorCapabilities = vendorCapabilities;
    return this;
  }

  public PrinterDefinitionPrinterInfoGcp addVendorCapabilitiesItem(GcpVendorCapability vendorCapabilitiesItem) {
    if (this.vendorCapabilities == null) {
      this.vendorCapabilities = new ArrayList<GcpVendorCapability>();
    }
    this.vendorCapabilities.add(vendorCapabilitiesItem);
    return this;
  }

   /**
   * Get vendorCapabilities
   * @return vendorCapabilities
  **/
  @ApiModelProperty(value = "")
  public List<GcpVendorCapability> getVendorCapabilities() {
    return vendorCapabilities;
  }

  public void setVendorCapabilities(List<GcpVendorCapability> vendorCapabilities) {
    this.vendorCapabilities = vendorCapabilities;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PrinterDefinitionPrinterInfoGcp printerDefinitionPrinterInfoGcp = (PrinterDefinitionPrinterInfoGcp) o;
    return Objects.equals(this.connector, printerDefinitionPrinterInfoGcp.connector) &&
        Objects.equals(this.createTime, printerDefinitionPrinterInfoGcp.createTime) &&
        Objects.equals(this.updateTime, printerDefinitionPrinterInfoGcp.updateTime) &&
        Objects.equals(this.accessTime, printerDefinitionPrinterInfoGcp.accessTime) &&
        Objects.equals(this.connectionStatus, printerDefinitionPrinterInfoGcp.connectionStatus) &&
        Objects.equals(this.vendorCapabilities, printerDefinitionPrinterInfoGcp.vendorCapabilities);
  }

  @Override
  public int hashCode() {
    return Objects.hash(connector, createTime, updateTime, accessTime, connectionStatus, vendorCapabilities);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PrinterDefinitionPrinterInfoGcp {\n");
    
    sb.append("    connector: ").append(toIndentedString(connector)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    accessTime: ").append(toIndentedString(accessTime)).append("\n");
    sb.append("    connectionStatus: ").append(toIndentedString(connectionStatus)).append("\n");
    sb.append("    vendorCapabilities: ").append(toIndentedString(vendorCapabilities)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

