/*
 * Xpertdoc SmartFlows
 * This describes the REST api for one Xpertdoc SmartFlows project
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package xpertdoc.smartflows.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * CompletedExecutions
 */
@javax.annotation.Generated(value = "xpertdoc.smartflows.codegen.languages.JavaClientCodegen", date = "2018-05-22T10:07:28.195+02:00")
public class CompletedExecutions {
  @SerializedName("schedule")
  private Schedule schedule = null;

  @SerializedName("success")
  private CompletedExecutionsPlan success = null;

  @SerializedName("error")
  private CompletedExecutionsPlan error = null;

  @SerializedName("cancelled")
  private CompletedExecutionsPlan cancelled = null;

  @SerializedName("interrupted")
  private CompletedExecutionsPlan interrupted = null;

  public CompletedExecutions schedule(Schedule schedule) {
    this.schedule = schedule;
    return this;
  }

   /**
   * Get schedule
   * @return schedule
  **/
  @ApiModelProperty(value = "")
  public Schedule getSchedule() {
    return schedule;
  }

  public void setSchedule(Schedule schedule) {
    this.schedule = schedule;
  }

  public CompletedExecutions success(CompletedExecutionsPlan success) {
    this.success = success;
    return this;
  }

   /**
   * Get success
   * @return success
  **/
  @ApiModelProperty(value = "")
  public CompletedExecutionsPlan getSuccess() {
    return success;
  }

  public void setSuccess(CompletedExecutionsPlan success) {
    this.success = success;
  }

  public CompletedExecutions error(CompletedExecutionsPlan error) {
    this.error = error;
    return this;
  }

   /**
   * Get error
   * @return error
  **/
  @ApiModelProperty(value = "")
  public CompletedExecutionsPlan getError() {
    return error;
  }

  public void setError(CompletedExecutionsPlan error) {
    this.error = error;
  }

  public CompletedExecutions cancelled(CompletedExecutionsPlan cancelled) {
    this.cancelled = cancelled;
    return this;
  }

   /**
   * Get cancelled
   * @return cancelled
  **/
  @ApiModelProperty(value = "")
  public CompletedExecutionsPlan getCancelled() {
    return cancelled;
  }

  public void setCancelled(CompletedExecutionsPlan cancelled) {
    this.cancelled = cancelled;
  }

  public CompletedExecutions interrupted(CompletedExecutionsPlan interrupted) {
    this.interrupted = interrupted;
    return this;
  }

   /**
   * Get interrupted
   * @return interrupted
  **/
  @ApiModelProperty(value = "")
  public CompletedExecutionsPlan getInterrupted() {
    return interrupted;
  }

  public void setInterrupted(CompletedExecutionsPlan interrupted) {
    this.interrupted = interrupted;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompletedExecutions completedExecutions = (CompletedExecutions) o;
    return Objects.equals(this.schedule, completedExecutions.schedule) &&
        Objects.equals(this.success, completedExecutions.success) &&
        Objects.equals(this.error, completedExecutions.error) &&
        Objects.equals(this.cancelled, completedExecutions.cancelled) &&
        Objects.equals(this.interrupted, completedExecutions.interrupted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(schedule, success, error, cancelled, interrupted);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompletedExecutions {\n");
    
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    cancelled: ").append(toIndentedString(cancelled)).append("\n");
    sb.append("    interrupted: ").append(toIndentedString(interrupted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

