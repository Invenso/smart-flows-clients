/*
 * Xpertdoc SmartFlows
 * This describes the REST api for one Xpertdoc SmartFlows project
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package xpertdoc.smartflows.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * FlowExecutionStateOutputParts
 */
@javax.annotation.Generated(value = "xpertdoc.smartflows.codegen.languages.JavaClientCodegen", date = "2018-05-22T10:07:28.195+02:00")
public class FlowExecutionStateOutputParts {
  @SerializedName("id")
  private String id = null;

  @SerializedName("displayName")
  private String displayName = null;

  @SerializedName("schema")
  private Object schema = null;

  @SerializedName("model")
  private Object model = null;

  @SerializedName("form")
  private List<Object> form = null;

  public FlowExecutionStateOutputParts id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public FlowExecutionStateOutputParts displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @ApiModelProperty(value = "")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public FlowExecutionStateOutputParts schema(Object schema) {
    this.schema = schema;
    return this;
  }

   /**
   * Get schema
   * @return schema
  **/
  @ApiModelProperty(value = "")
  public Object getSchema() {
    return schema;
  }

  public void setSchema(Object schema) {
    this.schema = schema;
  }

  public FlowExecutionStateOutputParts model(Object model) {
    this.model = model;
    return this;
  }

   /**
   * Get model
   * @return model
  **/
  @ApiModelProperty(value = "")
  public Object getModel() {
    return model;
  }

  public void setModel(Object model) {
    this.model = model;
  }

  public FlowExecutionStateOutputParts form(List<Object> form) {
    this.form = form;
    return this;
  }

  public FlowExecutionStateOutputParts addFormItem(Object formItem) {
    if (this.form == null) {
      this.form = new ArrayList<Object>();
    }
    this.form.add(formItem);
    return this;
  }

   /**
   * Get form
   * @return form
  **/
  @ApiModelProperty(value = "")
  public List<Object> getForm() {
    return form;
  }

  public void setForm(List<Object> form) {
    this.form = form;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlowExecutionStateOutputParts flowExecutionStateOutputParts = (FlowExecutionStateOutputParts) o;
    return Objects.equals(this.id, flowExecutionStateOutputParts.id) &&
        Objects.equals(this.displayName, flowExecutionStateOutputParts.displayName) &&
        Objects.equals(this.schema, flowExecutionStateOutputParts.schema) &&
        Objects.equals(this.model, flowExecutionStateOutputParts.model) &&
        Objects.equals(this.form, flowExecutionStateOutputParts.form);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, displayName, schema, model, form);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlowExecutionStateOutputParts {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    schema: ").append(toIndentedString(schema)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    form: ").append(toIndentedString(form)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

