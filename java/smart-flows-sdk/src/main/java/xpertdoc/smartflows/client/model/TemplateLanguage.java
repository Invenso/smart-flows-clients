/*
 * Xpertdoc SmartFlows
 * This describes the REST api for one Xpertdoc SmartFlows project
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package xpertdoc.smartflows.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * TemplateLanguage
 */
@javax.annotation.Generated(value = "xpertdoc.smartflows.codegen.languages.JavaClientCodegen", date = "2018-05-22T10:07:28.195+02:00")
public class TemplateLanguage {
  @SerializedName("template")
  private String template = null;

  @SerializedName("language")
  private String language = null;

  @SerializedName("isDefault")
  private Boolean isDefault = null;

  @SerializedName("hasContent")
  private Boolean hasContent = null;

  @SerializedName("contentLink")
  private String contentLink = null;

  public TemplateLanguage template(String template) {
    this.template = template;
    return this;
  }

   /**
   * Get template
   * @return template
  **/
  @ApiModelProperty(value = "")
  public String getTemplate() {
    return template;
  }

  public void setTemplate(String template) {
    this.template = template;
  }

  public TemplateLanguage language(String language) {
    this.language = language;
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @ApiModelProperty(value = "")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public TemplateLanguage isDefault(Boolean isDefault) {
    this.isDefault = isDefault;
    return this;
  }

   /**
   * Get isDefault
   * @return isDefault
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsDefault() {
    return isDefault;
  }

  public void setIsDefault(Boolean isDefault) {
    this.isDefault = isDefault;
  }

  public TemplateLanguage hasContent(Boolean hasContent) {
    this.hasContent = hasContent;
    return this;
  }

   /**
   * Get hasContent
   * @return hasContent
  **/
  @ApiModelProperty(value = "")
  public Boolean isHasContent() {
    return hasContent;
  }

  public void setHasContent(Boolean hasContent) {
    this.hasContent = hasContent;
  }

  public TemplateLanguage contentLink(String contentLink) {
    this.contentLink = contentLink;
    return this;
  }

   /**
   * Get contentLink
   * @return contentLink
  **/
  @ApiModelProperty(value = "")
  public String getContentLink() {
    return contentLink;
  }

  public void setContentLink(String contentLink) {
    this.contentLink = contentLink;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TemplateLanguage templateLanguage = (TemplateLanguage) o;
    return Objects.equals(this.template, templateLanguage.template) &&
        Objects.equals(this.language, templateLanguage.language) &&
        Objects.equals(this.isDefault, templateLanguage.isDefault) &&
        Objects.equals(this.hasContent, templateLanguage.hasContent) &&
        Objects.equals(this.contentLink, templateLanguage.contentLink);
  }

  @Override
  public int hashCode() {
    return Objects.hash(template, language, isDefault, hasContent, contentLink);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TemplateLanguage {\n");
    
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    isDefault: ").append(toIndentedString(isDefault)).append("\n");
    sb.append("    hasContent: ").append(toIndentedString(hasContent)).append("\n");
    sb.append("    contentLink: ").append(toIndentedString(contentLink)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

