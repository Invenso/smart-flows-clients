/* 
 * SmartFlows
 *
 * This describes the REST api for one SmartFlows project 
 *
 * OpenAPI spec version: 4.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.Runtime.Serialization;

namespace Xpertdoc.SmartFlows.Model
{
    /// <summary>
    /// Defines objectType
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ObjectType
    {

        /// <summary>
        /// Enum Asset for "asset"
        /// </summary>
        [EnumMember(Value = "asset")]
        Asset,

        /// <summary>
        /// Enum Connector for "connector"
        /// </summary>
        [EnumMember(Value = "connector")]
        Connector,

        /// <summary>
        /// Enum ConnectorType for "connectorType"
        /// </summary>
        [EnumMember(Value = "connectorType")]
        ConnectorType,

        /// <summary>
        /// Enum Datasource for "datasource"
        /// </summary>
        [EnumMember(Value = "datasource")]
        Datasource,

        /// <summary>
        /// Enum Data for "data"
        /// </summary>
        [EnumMember(Value = "data")]
        Data,

        /// <summary>
        /// Enum Dataset for "dataset"
        /// </summary>
        [EnumMember(Value = "dataset")]
        Dataset,

        /// <summary>
        /// Enum Document for "document"
        /// </summary>
        [EnumMember(Value = "document")]
        Document,

        /// <summary>
        /// Enum EntityReference for "entityReference"
        /// </summary>
        [EnumMember(Value = "entityReference")]
        EntityReference,

        /// <summary>
        /// Enum Flow for "flow"
        /// </summary>
        [EnumMember(Value = "flow")]
        Flow,

        /// <summary>
        /// Enum Language for "language"
        /// </summary>
        [EnumMember(Value = "language")]
        Language,

        /// <summary>
        /// Enum Printer for "printer"
        /// </summary>
        [EnumMember(Value = "printer")]
        Printer,

        /// <summary>
        /// Enum Tag for "tag"
        /// </summary>
        [EnumMember(Value = "tag")]
        Tag,

        /// <summary>
        /// Enum TagGroup for "tagGroup"
        /// </summary>
        [EnumMember(Value = "tagGroup")]
        TagGroup,

        /// <summary>
        /// Enum Template for "template"
        /// </summary>
        [EnumMember(Value = "template")]
        Template,

        /// <summary>
        /// Enum TemplateLibrary for "templateLibrary"
        /// </summary>
        [EnumMember(Value = "templateLibrary")]
        TemplateLibrary,

        /// <summary>
        /// Enum User for "user"
        /// </summary>
        [EnumMember(Value = "user")]
        User,

        /// <summary>
        /// Enum PortalLibrary for "portalLibrary"
        /// </summary>
        [EnumMember(Value = "portalLibrary")]
        PortalLibrary,

        /// <summary>
        /// Enum PortalGroup for "portalGroup"
        /// </summary>
        [EnumMember(Value = "portalGroup")]
        PortalGroup,

        /// <summary>
        /// Enum PortalTemplate for "portalTemplate"
        /// </summary>
        [EnumMember(Value = "portalTemplate")]
        PortalTemplate
    }

}
